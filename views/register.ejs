<!DOCTYPE html>
<html lang="en" class="">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Register - SyncRoom</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      darkMode: 'class',
    }
  </script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
  <style>
    #particles-js {
      position: fixed;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      z-index: -1;
    }
    .form-container {
        animation: fadeInUp 0.6s ease-out forwards;
    }
    @keyframes fadeInUp {
        from { opacity: 0; transform: translateY(20px) scale(0.98); }
        to { opacity: 1; transform: translateY(0) scale(1); }
    }
    .criteria-item.valid {
        color: #10B981; /* green-500 */
    }
    .criteria-item.valid .fa-circle {
        display: none;
    }
    .criteria-item.valid .fa-check-circle {
        display: inline-block;
    }
    .criteria-item .fa-check-circle {
        display: none;
    }
    html.dark .criteria-item.valid {
        color: #34D399; /* green-400 */
    }
  </style>
</head>
<body class="bg-gray-100 dark:bg-gray-900 transition-colors duration-300">

  <div id="particles-js"></div>

  <div class="absolute top-4 right-4 z-10">
      <button id="theme-toggle" class="text-gray-600 dark:text-gray-400 bg-white/50 dark:bg-gray-800/50 backdrop-blur-sm hover:text-gray-800 dark:hover:text-gray-200 transition p-3 rounded-full shadow-md" title="Toggle Theme">
          <i class="fas fa-moon" id="theme-toggle-dark-icon"></i>
          <i class="fas fa-sun" id="theme-toggle-light-icon" style="display: none;"></i>
      </button>
  </div>

  <div class="min-h-screen flex flex-col items-center justify-center p-4">
    <div class="form-container w-full max-w-sm">
        <form id="register-form" action="/register" method="POST" class="bg-white/80 dark:bg-gray-800/80 backdrop-blur-lg p-8 rounded-2xl shadow-2xl space-y-6">
          <h2 class="text-3xl font-bold mb-2 text-center text-gray-800 dark:text-gray-200">Create Account</h2>
          <div class="space-y-4">
            <input name="username" placeholder="Username" class="bg-gray-100 dark:bg-gray-700 border-2 border-transparent text-gray-800 dark:text-gray-200 w-full px-4 py-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 transition" required />
            
            <input type="email" name="email" placeholder="Email" class="bg-gray-100 dark:bg-gray-700 border-2 border-transparent text-gray-800 dark:text-gray-200 w-full px-4 py-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 transition" required />
            
            <input type="password" id="password" name="password" placeholder="Password" class="bg-gray-100 dark:bg-gray-700 border-2 border-transparent text-gray-800 dark:text-gray-200 w-full px-4 py-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 transition" required />
            <input type="password" id="confirm-password" name="confirmPassword" placeholder="Confirm Password" class="bg-gray-100 dark:bg-gray-700 border-2 border-transparent text-gray-800 dark:text-gray-200 w-full px-4 py-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 transition" required />
          </div>

          <div id="password-criteria" class="text-sm text-gray-600 dark:text-gray-400 space-y-1">
              <p class="criteria-item" id="criteria-length"><i class="far fa-circle"></i><i class="fas fa-check-circle"></i> At least 8 characters</p>
              <p class="criteria-item" id="criteria-uppercase"><i class="far fa-circle"></i><i class="fas fa-check-circle"></i> An uppercase letter</p>
              <p class="criteria-item" id="criteria-lowercase"><i class="far fa-circle"></i><i class="fas fa-check-circle"></i> A lowercase letter</p>
              <p class="criteria-item" id="criteria-number"><i class="far fa-circle"></i><i class="fas fa-check-circle"></i> A number</p>
              <p class="criteria-item" id="criteria-special"><i class="far fa-circle"></i><i class="fas fa-check-circle"></i> A special character (!@#$...)</p>
              <p class="criteria-item" id="criteria-match"><i class="far fa-circle"></i><i class="fas fa-check-circle"></i> Passwords match</p>
          </div>

          <button id="register-button" type="submit" class="w-full bg-green-600 text-white py-3 rounded-lg hover:bg-green-700 transition-all transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 font-semibold disabled:bg-gray-400 disabled:cursor-not-allowed disabled:hover:scale-100" disabled>Register</button>
          <p class="text-center text-sm text-gray-600 dark:text-gray-400">
            Already have an account? <a href="/login" class="text-blue-500 hover:underline font-medium">Login</a>
          </p>
        </form>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/particles.js@2.0.0/particles.min.js"></script>
  <script>
    // --- Particle.js Configuration ---
    const particleConfig = (isDark) => {
        const particleColor = isDark ? "#ffffff" : "#374151";
        const lineColor = isDark ? "#ffffff" : "#374151";
        return { "particles":{ "number":{ "value":80, "density":{ "enable":true, "value_area":800 } }, "color":{ "value":particleColor }, "shape":{ "type":"circle" }, "opacity":{ "value":0.5, "random":false }, "size":{ "value":3, "random":true }, "line_linked":{ "enable":true, "distance":150, "color":lineColor, "opacity":0.4, "width":1 }, "move":{ "enable":true, "speed":2, "direction":"none", "random":false, "straight":false, "out_mode":"out", "bounce":false } }, "interactivity":{ "detect_on":"canvas", "events":{ "onhover":{ "enable":true, "mode":"grab" }, "onclick":{ "enable":true, "mode":"push" }, "resize":true }, "modes":{ "grab":{ "distance":140, "line_linked":{ "opacity":1 } }, "push":{ "particles_nb":4 } } }, "retina_detect":true };
    };
    const loadParticles = (isDark) => {
        particlesJS('particles-js', particleConfig(isDark));
    };

    // --- Theme Management ---
    const themeToggleBtn = document.getElementById('theme-toggle');
    const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
    const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');

    const setTheme = (isDark) => {
        document.documentElement.classList.toggle('dark', isDark);
        localStorage.setItem('theme', isDark ? 'dark' : 'light');
        if(themeToggleLightIcon) themeToggleLightIcon.style.display = isDark ? 'block' : 'none';
        if(themeToggleDarkIcon) themeToggleDarkIcon.style.display = isDark ? 'none' : 'block';
        loadParticles(isDark);
    };

    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    const savedTheme = localStorage.getItem('theme');
    const isInitiallyDark = savedTheme === 'dark' || (!savedTheme && prefersDark);
    setTheme(isInitiallyDark);

    themeToggleBtn.addEventListener('click', () => {
      const isCurrentlyDark = document.documentElement.classList.contains('dark');
      setTheme(!isCurrentlyDark);
    });

    // --- Password Validation Logic ---
    const passwordInput = document.getElementById('password');
    const confirmPasswordInput = document.getElementById('confirm-password');
    const registerButton = document.getElementById('register-button');
    const criteria = {
        length: document.getElementById('criteria-length'),
        uppercase: document.getElementById('criteria-uppercase'),
        lowercase: document.getElementById('criteria-lowercase'),
        number: document.getElementById('criteria-number'),
        special: document.getElementById('criteria-special'),
        match: document.getElementById('criteria-match'),
    };

    const validatePassword = () => {
        const password = passwordInput.value;
        const confirmPassword = confirmPasswordInput.value;

        const isLengthValid = password.length >= 8;
        const hasUppercase = /[A-Z]/.test(password);
        const hasLowercase = /[a-z]/.test(password);
        const hasNumber = /[0-9]/.test(password);
        const hasSpecial = /[!@#$%^&*(),.?":{}|<>]/.test(password);
        const doPasswordsMatch = password && password === confirmPassword;

        criteria.length.classList.toggle('valid', isLengthValid);
        criteria.uppercase.classList.toggle('valid', hasUppercase);
        criteria.lowercase.classList.toggle('valid', hasLowercase);
        criteria.number.classList.toggle('valid', hasNumber);
        criteria.special.classList.toggle('valid', hasSpecial);
        criteria.match.classList.toggle('valid', doPasswordsMatch);

        const isFormValid = isLengthValid && hasUppercase && hasLowercase && hasNumber && hasSpecial && doPasswordsMatch;
        registerButton.disabled = !isFormValid;
    };

    passwordInput.addEventListener('input', validatePassword);
    confirmPasswordInput.addEventListener('input', validatePassword);

  </script>
</body>
</html>