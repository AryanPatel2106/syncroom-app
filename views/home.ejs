<!DOCTYPE html>
<html lang="en" class="">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>SyncRoom - Real-Time Collaboration</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Inter', sans-serif;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }

    .fade-in-up {
      animation: fadeInUp 0.8s ease-out forwards;
      opacity: 0;
    }

    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .fade-in-up:nth-child(1) { animation-delay: 0.1s; }
    .fade-in-up:nth-child(2) { animation-delay: 0.2s; }
    .fade-in-up:nth-child(3) { animation-delay: 0.3s; }
    .fade-in-up:nth-child(4) { animation-delay: 0.4s; }
  </style>
</head>

<body class="bg-gray-50 dark:bg-gray-900 text-gray-800 dark:text-gray-100 transition-colors duration-300">

  <!-- Navigation -->
  <nav class="bg-white/80 dark:bg-gray-800/80 backdrop-blur-md shadow-sm px-4 sm:px-6 py-4 flex justify-between items-center sticky top-0 z-50 border-b border-gray-200 dark:border-gray-700">
    <a href="/" class="text-2xl font-bold text-indigo-600 dark:text-indigo-400">SyncRoom</a>
    <div class="flex items-center space-x-2 sm:space-x-4">
      <% if (user) { %>
        <a href="/groups" class="text-sm sm:text-base font-medium text-gray-600 dark:text-gray-300 hover:text-indigo-600 dark:hover:text-indigo-500 transition-colors">Dashboard</a>
        <a href="/logout" class="text-sm sm:text-base font-medium text-gray-600 dark:text-gray-300 hover:text-indigo-600 dark:hover:text-indigo-500 transition-colors">Logout</a>
      <% } else { %>
        <a href="/login" class="hidden sm:block text-sm sm:text-base font-medium text-gray-600 dark:text-gray-300 hover:text-indigo-600 dark:hover:text-indigo-500 transition-colors">Login</a>
        <a href="/register" class="text-sm sm:text-base bg-indigo-600 text-white px-4 py-2 rounded-lg shadow-md hover:bg-indigo-700 transition-colors transform hover:scale-105">Sign Up</a>
      <% } %>
      <button id="theme-toggle" type="button" class="text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none rounded-lg text-sm p-2.5">
        <i id="theme-toggle-dark-icon" class="fas fa-moon w-5 h-5"></i>
        <i id="theme-toggle-light-icon" class="fas fa-sun w-5 h-5 hidden"></i>
      </button>
    </div>
  </nav>

  <!-- Hero Section -->
  <main class="flex-1">
    <section class="py-20 sm:py-28">
      <div class="container mx-auto px-6 text-center">
        <div class="max-w-3xl mx-auto">
          <h1 class="text-4xl sm:text-6xl font-extrabold text-gray-900 dark:text-white mb-4 fade-in-up">Connect & Collaborate Instantly</h1>
          <p class="text-lg sm:text-xl text-gray-600 dark:text-gray-400 mb-8 fade-in-up">
            SyncRoom is your all-in-one platform for seamless team communication. Create groups, chat in real-time, and share files securely.
          </p>
          <div class="flex justify-center items-center space-x-4 fade-in-up">
            <% if (user) { %>
              <a href="/groups" class="bg-indigo-600 text-white px-8 py-3 rounded-lg shadow-lg font-semibold hover:bg-indigo-700 transition-transform transform hover:-translate-y-1 text-lg">
                Go to Dashboard
              </a>
            <% } else { %>
              <a href="/register" class="bg-indigo-600 text-white px-8 py-3 rounded-lg shadow-lg font-semibold hover:bg-indigo-700 transition-transform transform hover:-translate-y-1 text-lg">
                Get Started for Free
              </a>
              <a href="/login" class="bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 px-8 py-3 rounded-lg font-semibold hover:bg-gray-300 dark:hover:bg-gray-600 transition sm:hidden">
                Sign In
              </a>
            <% } %>
          </div>
        </div>
      </div>
    </section>

    <!-- File Drop Section -->
    <section id="file-drop" class="py-20 sm:py-24 bg-gray-100 dark:bg-gray-800/50">
        <div class="container mx-auto px-6">
            <div class="text-center mb-12">
                <h2 class="text-3xl sm:text-4xl font-bold text-gray-900 dark:text-white">Instant File Drop</h2>
                <p class="text-lg text-gray-600 dark:text-gray-400 mt-2">Share files instantly with a secret code.</p>
            </div>
            <div class="max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-8">
                <!-- Send File Card -->
                <div class="bg-white dark:bg-gray-800 p-8 rounded-xl shadow-lg">
                    <h3 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">Send File</h3>
                    <div id="send-container">
                        <label for="file-drop-input" class="w-full cursor-pointer bg-indigo-600 text-white px-6 py-3 rounded-lg shadow-md font-semibold hover:bg-indigo-700 transition-colors transform hover:scale-105 inline-block text-center">
                            <i class="fas fa-cloud-upload-alt mr-2"></i> Choose a file to send
                        </label>
                        <input type="file" id="file-drop-input" class="hidden">
                        <p class="text-sm text-gray-500 dark:text-gray-400 mt-3">Max file size: 100MB. Code expires in 15 minutes.</p>
                    </div>
                    <div id="send-progress-container" class="hidden text-center">
                        <div class="loader ease-linear rounded-full border-4 border-t-4 border-gray-200 h-12 w-12 mb-4 mx-auto"></div>
                        <p id="upload-status" class="text-lg font-medium text-gray-700 dark:text-gray-300">Uploading...</p>
                        <div id="secret-code-container" class="hidden mt-4">
                            <p class="text-lg font-medium">Your secret code is:</p>
                            <div id="secret-code-display" class="text-4xl font-bold text-indigo-500 tracking-widest bg-gray-100 dark:bg-gray-700 rounded-lg p-4 mt-2 inline-block">
                                <!-- Code will be injected here -->
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Receive File Card -->
                <div class="bg-white dark:bg-gray-800 p-8 rounded-xl shadow-lg">
                    <h3 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">Receive File</h3>
                    <div class="flex flex-col space-y-4">
                        <input type="text" id="receive-code-input" placeholder="Enter 6-digit code" maxlength="6" class="text-center text-2xl font-mono tracking-widest bg-gray-100 dark:bg-gray-700 border-2 border-gray-300 dark:border-gray-600 rounded-lg p-3 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 outline-none transition">
                        <button id="receive-btn" class="w-full bg-green-500 text-white px-6 py-3 rounded-lg shadow-md font-semibold hover:bg-green-600 transition-colors transform hover:scale-105">
                            <i class="fas fa-download mr-2"></i> Get File
                        </button>
                        <p id="receive-status" class="text-center text-red-500 font-medium h-4"></p>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Features Section -->
    <section class="bg-white dark:bg-gray-800 py-20 sm:py-24">
      <div class="container mx-auto px-6">
        <div class="text-center mb-12">
          <h2 class="text-3xl sm:text-4xl font-bold text-gray-900 dark:text-white">Everything You Need to Stay in Sync</h2>
          <p class="text-lg text-gray-600 dark:text-gray-400 mt-2">Powerful features built for modern teams.</p>
        </div>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
          <!-- Feature 1 -->
          <div class="bg-gray-50 dark:bg-gray-900 p-8 rounded-xl shadow-md hover:shadow-xl transition-shadow duration-300 fade-in-up">
            <div class="bg-indigo-100 dark:bg-indigo-900/50 text-indigo-600 dark:text-indigo-400 rounded-full w-12 h-12 flex items-center justify-center mb-4">
              <i class="fas fa-comments text-xl"></i>
            </div>
            <h3 class="text-xl font-bold mb-2">Real-Time Chat</h3>
            <p class="text-gray-600 dark:text-gray-400">Engage in dynamic conversations with message reactions, replies, and typing indicators.</p>
          </div>
          <!-- Feature 2 -->
          <div class="bg-gray-50 dark:bg-gray-900 p-8 rounded-xl shadow-md hover:shadow-xl transition-shadow duration-300 fade-in-up">
            <div class="bg-green-100 dark:bg-green-900/50 text-green-600 dark:text-green-400 rounded-full w-12 h-12 flex items-center justify-center mb-4">
              <i class="fas fa-cloud-upload-alt text-xl"></i>
            </div>
            <h3 class="text-xl font-bold mb-2">Secure File Sharing</h3>
            <p class="text-gray-600 dark:text-gray-400">Easily upload and share images, documents, and other files within your groups.</p>
          </div>
          <!-- Feature 3 -->
          <div class="bg-gray-50 dark:bg-gray-900 p-8 rounded-xl shadow-md hover:shadow-xl transition-shadow duration-300 fade-in-up">
            <div class="bg-purple-100 dark:bg-purple-900/50 text-purple-600 dark:text-purple-400 rounded-full w-12 h-12 flex items-center justify-center mb-4">
              <i class="fas fa-users-cog text-xl"></i>
            </div>
            <h3 class="text-xl font-bold mb-2">Group Management</h3>
            <p class="text-gray-600 dark:text-gray-400">Control your groups with role-based permissions for owners, admins, and members.</p>
          </div>
        </div>
      </div>
    </section>

    <!-- CTA Section -->
    <section class="py-20 sm:py-28">
      <div class="container mx-auto px-6 text-center">
        <div class="max-w-2xl mx-auto">
          <h2 class="text-3xl sm:text-4xl font-bold text-gray-900 dark:text-white mb-4">Ready to Get Started?</h2>
          <p class="text-lg text-gray-600 dark:text-gray-400 mb-8">Create an account in seconds and start collaborating with your team today.</p>
          <a href="/register" class="bg-indigo-600 text-white px-10 py-4 rounded-lg shadow-lg font-semibold hover:bg-indigo-700 transition-transform transform hover:-translate-y-1 text-lg">
            Sign Up Now
          </a>
        </div>
      </div>
    </section>
  </main>

  <!-- Footer -->
  <footer class="bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700">
    <div class="container mx-auto py-8 px-6 text-center text-gray-500 dark:text-gray-400">
      <p>&copy; <%= new Date().getFullYear() %> SyncRoom. All rights reserved.</p>
      <div class="flex justify-center space-x-6 mt-4">
        <a href="#" class="hover:text-indigo-500 transition-colors"><i class="fab fa-twitter"></i></a>
        <a href="#" class="hover:text-indigo-500 transition-colors"><i class="fab fa-github"></i></a>
        <a href="#" class="hover:text-indigo-500 transition-colors"><i class="fab fa-linkedin"></i></a>
      </div>
    </div>
  </footer>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    // --- Theme Management ---
    const themeToggleBtn = document.getElementById('theme-toggle');
    const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
    const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');

    const setTheme = (isDark) => {
      document.documentElement.classList.toggle('dark', isDark);
      localStorage.setItem('theme', isDark ? 'dark' : 'light');
      if (themeToggleLightIcon) themeToggleLightIcon.classList.toggle('hidden', !isDark);
      if (themeToggleDarkIcon) themeToggleDarkIcon.classList.toggle('hidden', isDark);
    };

    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    const savedTheme = localStorage.getItem('theme');
    const isInitiallyDark = savedTheme === 'dark' || (!savedTheme && prefersDark);
    setTheme(isInitiallyDark);

    themeToggleBtn.addEventListener('click', () => {
      const isCurrentlyDark = document.documentElement.classList.contains('dark');
      setTheme(!isCurrentlyDark);
    });

    // --- File Drop Feature ---
    const socket = io();

    const fileInput = document.getElementById('file-drop-input');
    const sendContainer = document.getElementById('send-container');
    const progressContainer = document.getElementById('send-progress-container');
    const uploadStatus = document.getElementById('upload-status');
    const secretCodeContainer = document.getElementById('secret-code-container');
    const secretCodeDisplay = document.getElementById('secret-code-display');

    const receiveCodeInput = document.getElementById('receive-code-input');
    const receiveBtn = document.getElementById('receive-btn');
    const receiveStatus = document.getElementById('receive-status');

    fileInput.addEventListener('change', (event) => {
        const file = event.target.files[0];
        if (!file) return;

        if (file.size > 100 * 1024 * 1024) { // 100MB limit
            alert('File is too large. Max size is 100MB.');
            return;
        }

        sendContainer.classList.add('hidden');
        progressContainer.classList.remove('hidden');
        secretCodeContainer.classList.add('hidden');
        uploadStatus.textContent = 'Uploading...';

        // We need to read the file into a buffer to send over Socket.IO
        const reader = new FileReader();
        reader.onload = (e) => {
            socket.emit('file-drop-upload', {
                fileBuffer: e.target.result,
                filename: file.name,
                mimetype: file.type
            });
        };
        reader.readAsArrayBuffer(file);
    });

    socket.on('file-drop-code', (code) => {
        uploadStatus.textContent = 'Upload Complete!';
        secretCodeDisplay.textContent = code;
        secretCodeContainer.classList.remove('hidden');
    });

    socket.on('file-drop-error', (message) => {
        alert(`Error: ${message}`);
        sendContainer.classList.remove('hidden');
        progressContainer.classList.add('hidden');
    });

    receiveBtn.addEventListener('click', () => {
        const code = receiveCodeInput.value.trim();
        if (code.length !== 6) {
            receiveStatus.textContent = 'Code must be 6 characters.';
            return;
        }
        receiveStatus.textContent = '';
        socket.emit('file-drop-request', code);
    });

    socket.on('file-drop-found', (file) => {
        receiveStatus.textContent = 'File found! Starting download...';
        // Trigger download
        const a = document.createElement('a');
        a.href = file.filepath;
        a.download = file.filename;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        
        setTimeout(() => { receiveStatus.textContent = ''; }, 3000);
    });

    socket.on('file-drop-not-found', () => {
        receiveStatus.textContent = 'Invalid code. Please try again.';
    });

  </script>

</body>

</html>