<!DOCTYPE html>
<html lang="en" class="">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage <%= group.name %></title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <style>
        #vanta-bg {
            position: fixed;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            z-index: -1;
        }
        .content-container {
            animation: fadeInUp 0.6s ease-out forwards;
        }
        @keyframes fadeInUp {
            from { opacity: 0; transform: translateY(20px) scale(0.98); }
            to { opacity: 1; transform: translateY(0) scale(1); }
        }
        /* For consistent avatar colors */
        .avatar {
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            color: white;
            border-radius: 50%;
        }
    </style>
</head>
<body class="bg-gray-100 dark:bg-gray-900 min-h-screen transition-colors duration-300">

    <div id="vanta-bg"></div>

    <!-- Theme Toggle -->
    <div class="absolute top-4 right-4 z-20">
        <button id="theme-toggle" type="button"
            class="text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5">
            <svg id="theme-toggle-dark-icon" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"
                xmlns="http://www.w3.org/2000/svg">
                <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
            </svg>
            <svg id="theme-toggle-light-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20"
                xmlns="http://www.w3.org/2000/svg">
                <path
                    d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 5.05A1 1 0 003.636 6.464l.707.707a1 1 0 001.414-1.414l-.707-.707zM3 11a1 1 0 100-2H2a1 1 0 100 2h1zM6.464 16.364a1 1 0 00-1.414-1.414l-.707.707a1 1 0 001.414 1.414l.707-.707z"
                    fill-rule="evenodd" clip-rule="evenodd"></path>
            </svg>
        </button>
    </div>

    <div class="max-w-4xl mx-auto p-4 sm:p-8 content-container">
        <div class="bg-white/60 dark:bg-gray-800/60 backdrop-blur-lg p-6 sm:p-8 rounded-2xl shadow-2xl">
            <div class="flex justify-between items-start mb-6">
                <div>
                    <h1 class="text-3xl font-bold text-gray-900 dark:text-gray-100">Manage Group</h1>
                    <p class="text-gray-600 dark:text-gray-400">Editing "<%= group.name %>"</p>
                </div>
                <a href="/chat/<%= groupId %>" class="text-sm bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-lg transition-colors flex items-center gap-2">
                    <i class="fas fa-arrow-left"></i>
                    Back to Chat
                </a>
            </div>

            <h2 class="text-xl font-semibold mb-4 text-gray-800 dark:text-gray-200">Members (<%= members.length %>)</h2>
            <div class="space-y-3">
                <% 
                const getAvatarColor = (name) => {
                    const colors = ['bg-red-500', 'bg-green-500', 'bg-blue-500', 'bg-yellow-500', 'bg-indigo-500', 'bg-purple-500', 'bg-pink-500'];
                    let hash = 0;
                    for (let i = 0; i < name.length; i++) {
                        hash = name.charCodeAt(i) + ((hash << 5) - hash);
                    }
                    return colors[Math.abs(hash) % colors.length];
                };
                %>
                <% members.forEach(member => { %>
                    <div class="flex justify-between items-center p-4 bg-gray-50/50 dark:bg-gray-700/50 rounded-xl shadow-sm">
                        <div class="flex items-center gap-4">
                            <div class="avatar w-10 h-10 <%= getAvatarColor(member.username) %>">
                                <%= member.username.charAt(0).toUpperCase() %>
                            </div>
                            <div>
                                <p class="font-bold text-gray-900 dark:text-gray-100"><%= member.username %></p>
                                <p class="text-sm text-gray-500 dark:text-gray-400 capitalize"><%= member.role %></p>
                            </div>
                        </div>
                        <div class="flex gap-2">
                            <% if (user.role === 'owner' && member.role === 'member') { %>
                                <form action="/chat/<%= groupId %>/manage/promote" method="POST">
                                    <input type="hidden" name="userIdToPromote" value="<%= member.id %>">
                                    <button type="submit" class="bg-green-500 text-white px-3 py-1.5 rounded-md text-xs font-semibold hover:bg-green-600 transition-colors">Promote</button>
                                </form>
                            <% } %>
                             <% if (user.role === 'owner' && member.role === 'admin') { %>
                                <form action="/chat/<%= groupId %>/manage/demote" method="POST">
                                    <input type="hidden" name="userIdToDemote" value="<%= member.id %>">
                                    <button type="submit" class="bg-yellow-500 text-white px-3 py-1.5 rounded-md text-xs font-semibold hover:bg-yellow-600 transition-colors">Demote</button>
                                </form>
                            <% } %>

                            <% if ((user.role === 'owner' || user.role === 'admin') && member.role !== 'owner' && member.id !== user.id) { %>
                                <form action="/chat/<%= groupId %>/manage/kick" method="POST">
                                    <input type="hidden" name="userIdToKick" value="<%= member.id %>">
                                    <button type="submit" class="bg-red-500 text-white px-3 py-1.5 rounded-md text-xs font-semibold hover:bg-red-600 transition-colors">Kick</button>
                                </form>
                            <% } %>
                        </div>
                    </div>
                <% }) %>
            </div>

            <!-- Danger Zone -->
            <div class="mt-10 pt-6 border-t border-red-500/30">
                <h2 class="text-xl font-semibold text-red-500 mb-4">Danger Zone</h2>
                <div class="bg-red-500/10 p-4 rounded-lg flex flex-col sm:flex-row justify-between items-center gap-4">
                    <div>
                        <% if (user.role === 'owner') { %>
                            <p class="font-bold text-gray-800 dark:text-gray-200">Delete this group</p>
                            <p class="text-sm text-gray-600 dark:text-gray-400">Once you delete a group, there is no going back. Please be certain.</p>
                        <% } else { %>
                            <p class="font-bold text-gray-800 dark:text-gray-200">Leave this group</p>
                            <p class="text-sm text-gray-600 dark:text-gray-400">You will lose access to all messages and files.</p>
                        <% } %>
                    </div>
                    <% if (user.role === 'owner') { %>
                        <form action="/chat/<%= groupId %>/delete" method="POST" onsubmit="return confirm('Are you absolutely sure you want to delete this group? This action cannot be undone.');">
                            <button type="submit" class="bg-red-600 text-white font-bold py-2 px-4 rounded-lg hover:bg-red-700 transition-colors w-full sm:w-auto">Delete Group</button>
                        </form>
                    <% } else { %>
                        <form action="/chat/<%= groupId %>/leave" method="POST" onsubmit="return confirm('Are you sure you want to leave this group?');">
                            <button type="submit" class="bg-red-600 text-white font-bold py-2 px-4 rounded-lg hover:bg-red-700 transition-colors w-full sm:w-auto">Leave Group</button>
                        </form>
                    <% } %>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r134/three.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vanta@latest/dist/vanta.net.min.js"></script>
    <script>
        // --- Vanta.js Background Logic ---
        let vantaEffect = null;
        const loadVantaBackground = (isDark) => {
            if (vantaEffect) vantaEffect.destroy();
            vantaEffect = VANTA.NET({
                el: "#vanta-bg",
                mouseControls: true,
                touchControls: true,
                gyroControls: false,
                minHeight: 200.00,
                minWidth: 200.00,
                scale: 1.00,
                scaleMobile: 1.00,
                color: isDark ? 0x1e40af : 0x3b82f6,
                backgroundColor: isDark ? 0x111827 : 0xf3f4f6,
                points: 12.00,
                maxDistance: 25.00,
                spacing: 18.00
            });
        };

        // --- Theme Management ---
        const themeToggleBtn = document.getElementById('theme-toggle');
        const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
        const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');

        const setTheme = (isDark) => {
            document.documentElement.classList.toggle('dark', isDark);
            localStorage.setItem('theme', isDark ? 'dark' : 'light');
            if(themeToggleLightIcon) themeToggleLightIcon.style.display = isDark ? 'block' : 'none';
            if(themeToggleDarkIcon) themeToggleDarkIcon.style.display = isDark ? 'none' : 'block';
            loadVantaBackground(isDark);
        };

        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        const savedTheme = localStorage.getItem('theme');
        const isInitiallyDark = savedTheme === 'dark' || (!savedTheme && prefersDark);
        setTheme(isInitiallyDark);

        themeToggleBtn.addEventListener('click', () => {
          const isCurrentlyDark = document.documentElement.classList.contains('dark');
          setTheme(!isCurrentlyDark);
        });
    </script>
</body>
</html>