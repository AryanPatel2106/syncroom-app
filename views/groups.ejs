<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Your Groups</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      darkMode: 'class',
    }
  </script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
  <style>
      #particles-js {
        position: fixed;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        z-index: -1;
      }
      .content-wrapper {
        position: relative;
        z-index: 1;
      }
      .animate-on-load {
        animation: fadeInUp 0.5s ease-out forwards;
        animation-fill-mode: backwards;
      }
      @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
      }
  </style>
</head>
<body class="bg-gray-100 dark:bg-gray-900 transition-colors duration-300">
  
  <div id="particles-js"></div>

  <div class="content-wrapper flex flex-col lg:flex-row min-h-screen">
    <!-- Left fixed panel -->
    <div class="w-full lg:w-96 bg-white/80 dark:bg-gray-800/80 backdrop-blur-md p-6 shadow-lg flex flex-col space-y-6 lg:space-y-4">
      <div class="flex justify-between items-center">
        <h1 class="text-xl font-bold text-gray-800 dark:text-gray-200">Welcome, <%= user.username %>!</h1>
        <button id="theme-toggle" class="text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 transition-transform transform hover:scale-110 p-2 rounded-full">
            <i class="fas fa-moon" id="theme-toggle-dark-icon"></i>
            <i class="fas fa-sun" id="theme-toggle-light-icon" style="display: none;"></i>
        </button>
      </div>

      <form action="/groups/create" method="POST" class="bg-gray-50/80 dark:bg-gray-700/80 p-4 rounded-lg shadow-inner">
        <h2 class="font-semibold mb-3 text-gray-800 dark:text-gray-200">Create Group</h2>
        <input name="group_name" placeholder="Group name" class="border dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-800 dark:text-gray-200 px-3 py-2 mb-2 w-full rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
        <input name="group_key" placeholder="Group key" class="border dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-800 dark:text-gray-200 px-3 py-2 mb-3 w-full rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
        <button class="bg-blue-600 hover:bg-blue-700 text-white px-3 py-2 rounded-md w-full transition-transform transform hover:scale-105">Create</button>
      </form>

      <form action="/groups/join" method="POST" class="bg-gray-50/80 dark:bg-gray-700/80 p-4 rounded-lg shadow-inner">
        <h2 class="font-semibold mb-3 text-gray-800 dark:text-gray-200">Join Group</h2>
        <input name="group_name" placeholder="Group name" class="border dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-800 dark:text-gray-200 px-3 py-2 mb-2 w-full rounded-md focus:outline-none focus:ring-2 focus:ring-green-500" required>
        <input name="group_key" placeholder="Group key" class="border dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-800 dark:text-gray-200 px-3 py-2 mb-3 w-full rounded-md focus:outline-none focus:ring-2 focus:ring-green-500" required>
        <button class="bg-green-600 hover:bg-green-700 text-white px-3 py-2 rounded-md w-full transition-transform transform hover:scale-105">Join</button>
      </form>

      <div class="text-center mt-auto pt-4">
        <a href="/logout" class="text-red-500 dark:text-red-400 hover:underline">Logout</a>
      </div>
    </div>

    <!-- Right scrollable panel -->
    <div class="flex-1 overflow-y-auto p-6">
      <div class="mb-6">
        <h2 class="text-2xl font-semibold mb-4 text-gray-800 dark:text-gray-200">Your Groups:</h2>
        <div class="relative mt-4 w-full max-w-lg">
          <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
            <i class="fas fa-search text-gray-500 dark:text-gray-400"></i>
          </div>
          <input id="searchInput" type="text" placeholder="Search groups..."
            class="pl-10 pr-4 py-2 w-full rounded-full border border-gray-300 dark:border-gray-600 bg-white/50 dark:bg-gray-800/50 text-gray-800 dark:text-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500">
        </div>
      </div>

      <ul id="groupsList" class="flex flex-col space-y-4">
        <% groups.forEach((group, index) => { %>
          <li class="w-full max-w-2xl animate-on-load" style="animation-delay: <%= (index * 100) + 100 %>ms">
            <a href="/chat/<%= group.id %>" class="block">
                <div class="flex items-center justify-between bg-white/70 dark:bg-gray-800/70 backdrop-blur-sm rounded-xl shadow-md hover:shadow-xl hover:-translate-y-1 transition-all duration-300 px-5 py-4">
                  <div class="flex items-center space-x-4">
                    <div class="flex items-center justify-center w-12 h-12 rounded-full bg-blue-100 dark:bg-blue-900/50">
                      <span class="font-semibold text-xl text-blue-700 dark:text-blue-300">
                        <%= group.name.charAt(0).toUpperCase() %>
                      </span>
                    </div>
                    <span class="text-lg font-medium text-gray-800 dark:text-gray-200 group-name">
                      <%= group.name %>
                    </span>
                  </div>
                  <i class="fas fa-chevron-right text-gray-400 dark:text-gray-500"></i>
                </div>
            </a>
          </li>
        <% }) %>
      </ul>
    </div>
  </div>
  
  <script src="https://cdn.jsdelivr.net/npm/particles.js@2.0.0/particles.min.js"></script>
  <script>
    // --- Particle.js Configuration ---
    const particleConfig = (isDark) => {
        const particleColor = isDark ? "#ffffff" : "#374151";
        const lineColor = isDark ? "#ffffff" : "#374151";
        return { "particles":{ "number":{ "value":80, "density":{ "enable":true, "value_area":800 } }, "color":{ "value":particleColor }, "shape":{ "type":"circle" }, "opacity":{ "value":0.5, "random":false }, "size":{ "value":3, "random":true }, "line_linked":{ "enable":true, "distance":150, "color":lineColor, "opacity":0.4, "width":1 }, "move":{ "enable":true, "speed":2, "direction":"none", "random":false, "straight":false, "out_mode":"out", "bounce":false } }, "interactivity":{ "detect_on":"canvas", "events":{ "onhover":{ "enable":true, "mode":"grab" }, "onclick":{ "enable":true, "mode":"push" }, "resize":true }, "modes":{ "grab":{ "distance":140, "line_linked":{ "opacity":1 } }, "push":{ "particles_nb":4 } } }, "retina_detect":true };
    };
    const loadParticles = (isDark) => {
        particlesJS('particles-js', particleConfig(isDark));
    };

    // --- Theme Management ---
    const themeToggleBtn = document.getElementById('theme-toggle');
    const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
    const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');

    const setTheme = (isDark) => {
      if (isDark) {
        document.documentElement.classList.add('dark');
        localStorage.setItem('theme', 'dark');
        if(themeToggleLightIcon) themeToggleLightIcon.style.display = 'block';
        if(themeToggleDarkIcon) themeToggleDarkIcon.style.display = 'none';
      } else {
        document.documentElement.classList.remove('dark');
        localStorage.setItem('theme', 'light');
        if(themeToggleLightIcon) themeToggleLightIcon.style.display = 'none';
        if(themeToggleDarkIcon) themeToggleDarkIcon.style.display = 'block';
      }
      loadParticles(isDark);
    };

    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    const savedTheme = localStorage.getItem('theme');
    const isInitiallyDark = savedTheme === 'dark' || (!savedTheme && prefersDark);
    setTheme(isInitiallyDark);

    themeToggleBtn.addEventListener('click', () => {
      const isCurrentlyDark = document.documentElement.classList.contains('dark');
      setTheme(!isCurrentlyDark);
    });

    // --- Search Functionality ---
    const searchInput = document.getElementById('searchInput');
    const groupsList = document.getElementById('groupsList');
    searchInput.addEventListener('keyup', () => {
      const filter = searchInput.value.toLowerCase();
      const items = groupsList.querySelectorAll('li');
      items.forEach(item => {
        const groupName = item.querySelector('.group-name').textContent.toLowerCase();
        item.style.display = groupName.includes(filter) ? '' : 'none';
      });
    });
  </script>
</body>
</html>
