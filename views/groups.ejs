<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Your Groups</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      darkMode: 'class',
    }
  </script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
  <style>
      #particles-js {
        position: fixed;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        z-index: -1;
      }
      .content-wrapper {
        position: relative;
        z-index: 1;
      }
      .animate-on-load {
        animation: fadeInUp 0.5s ease-out forwards;
        animation-fill-mode: backwards;
      }
      @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
      }
  </style>
</head>
<body class="bg-gray-100 dark:bg-gray-900 text-gray-800 dark:text-gray-200">

  <div id="particles-js"></div>

  <div class="content-wrapper container mx-auto p-4 md:p-8">

    <header class="flex justify-between items-center mb-8 animate-on-load" style="animation-delay: 0.1s;">
      <h1 class="text-3xl font-bold">Welcome, <%= user.username %>!</h1>
      <div>
        <a href="/logout" class="mr-4 text-sm text-gray-600 dark:text-gray-400 hover:underline">Logout</a>
        <button id="theme-toggle" class="px-3 py-2 text-sm rounded-md bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600">
          <i id="theme-toggle-dark-icon" class="fas fa-moon"></i>
          <i id="theme-toggle-light-icon" class="fas fa-sun" style="display: none;"></i>
        </button>
      </div>
    </header>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8">
      <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg animate-on-load" style="animation-delay: 0.2s;">
        <h2 class="text-2xl font-semibold mb-4">Create a New Group</h2>
        <form action="/groups/create" method="POST" class="space-y-4">
          <input type="text" name="name" placeholder="Group Name" class="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500" required>
          <input type="password" name="key" placeholder="Group Key (Password)" class="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500" required>
          <button type="submit" class="w-full bg-blue-500 text-white py-2 rounded-md hover:bg-blue-600 transition-colors">Create Group</button>
        </form>
      </div>

      <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg animate-on-load" style="animation-delay: 0.3s;">
        <h2 class="text-2xl font-semibold mb-4">Join an Existing Group</h2>
        <form action="/groups/join" method="POST" class="space-y-4">
          <input type="text" name="name" placeholder="Group Name" class="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 focus:outline-none focus:ring-2 focus:ring-green-500" required>
          <input type="password" name="key" placeholder="Group Key (Password)" class="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 focus:outline-none focus:ring-2 focus:ring-green-500" required>
          <button type="submit" class="w-full bg-green-500 text-white py-2 rounded-md hover:bg-green-600 transition-colors">Join Group</button>
        </form>
      </div>
    </div>

    <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg animate-on-load" style="animation-delay: 0.4s;">
      <div class="flex justify-between items-center mb-4">
        <h2 class="text-2xl font-semibold">Your Groups</h2>
        <input type="text" id="searchInput" placeholder="Search groups..." class="p-2 border rounded dark:bg-gray-700 dark:border-gray-600 focus:outline-none focus:ring-2 focus:ring-indigo-500">
      </div>
      <ul id="groupsList" class="space-y-3">
        <% if (groups.length === 0) { %>
          <p class="text-gray-500 dark:text-gray-400">You haven't joined or created any groups yet.</p>
        <% } else { %>
          <% groups.forEach(group => { %>
            <li class="flex justify-between items-center p-4 bg-gray-50 dark:bg-gray-700 rounded-lg shadow-sm hover:shadow-md hover:bg-gray-100 dark:hover:bg-gray-600 transition-all duration-300">
              <div class="flex items-center gap-3">
                <h3 class="font-bold group-name text-lg"><%= group.name %></h3>
                <span class="text-xs capitalize bg-gray-200 dark:bg-gray-600 text-gray-600 dark:text-gray-300 px-2 py-1 rounded-full font-medium"><%= group.role %></span>
              </div>
              <a href="/chat/<%= group.id %>" class="bg-indigo-500 text-white px-4 py-2 rounded-md hover:bg-indigo-600 transition-colors">Enter Chat</a>
            </li>
          <% }) %>
        <% } %>
      </ul>
    </div>

  </div>

  <script src="https://cdn.jsdelivr.net/npm/tsparticles@1.37.5/dist/tsparticles.min.js"></script>
  <script>
    // --- Particle and Theme Logic (Unchanged) ---
    const themeToggleBtn = document.getElementById('theme-toggle');
    const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
    const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');

    const particleConfig = (isDark) => {
      const color = isDark ? "#ffffff" : "#000000";
      return { particles: { number: { value: 80, density: { enable: true, value_area: 800 } }, color: { value: color }, shape: { type: "circle" }, opacity: { value: 0.5, random: false }, size: { value: 3, random: true }, line_linked: { enable: true, distance: 150, color: color, opacity: 0.4, width: 1 }, move: { enable: true, speed: 2, direction: "none", random: false, straight: false, out_mode: "out", bounce: false } }, interactivity: { detect_on: "canvas", events: { onhover: { enable: true, mode: "grab" }, onclick: { enable: true, mode: "push" }, resize: true }, modes: { grab: { distance: 140, line_linked: { opacity: 1 } }, push: { particles_nb: 4 } } }, retina_detect: true };
    };
    const loadParticles = (isDark) => {
        particlesJS('particles-js', particleConfig(isDark));
    };
    const setTheme = (isDark) => {
      if (isDark) {
        document.documentElement.classList.add('dark');
        localStorage.setItem('theme', 'dark');
        if(themeToggleLightIcon) themeToggleLightIcon.style.display = 'block';
        if(themeToggleDarkIcon) themeToggleDarkIcon.style.display = 'none';
      } else {
        document.documentElement.classList.remove('dark');
        localStorage.setItem('theme', 'light');
        if(themeToggleLightIcon) themeToggleLightIcon.style.display = 'none';
        if(themeToggleDarkIcon) themeToggleDarkIcon.style.display = 'block';
      }
      loadParticles(isDark);
    };

    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    const savedTheme = localStorage.getItem('theme');
    const isInitiallyDark = savedTheme === 'dark' || (!savedTheme && prefersDark);
    setTheme(isInitiallyDark);

    themeToggleBtn.addEventListener('click', () => {
      const isCurrentlyDark = document.documentElement.classList.contains('dark');
      setTheme(!isCurrentlyDark);
    });

    // --- Search Functionality (Unchanged) ---
    const searchInput = document.getElementById('searchInput');
    const groupsList = document.getElementById('groupsList');
    searchInput.addEventListener('keyup', () => {
      const filter = searchInput.value.toLowerCase();
      const items = groupsList.querySelectorAll('li');
      items.forEach(item => {
        const groupName = item.querySelector('.group-name').textContent.toLowerCase();
        item.style.display = groupName.includes(filter) ? '' : 'none';
      });
    });
  </script>
</body>
</html>